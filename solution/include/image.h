#ifndef IMAGE_H
#define IMAGE_H

#include <stdint.h>
#include <stddef.h>
#include "pixel.h"

/**
 * @brief Структура, представляющая изображение.
 *
 * Содержит ширину и высоту изображения, а также указатель на массив пикселей.
 * Каждый пиксель представлен структурой `pixel`, которая определена в "pixel.h".
 */
struct image {
    uint64_t width;          // Ширина изображения в пикселях
    uint64_t height;         // Высота изображения в пикселях
    struct pixel *data;      // Указатель на массив данных пикселей изображения
};

/**
 * @brief Создает изображение с указанной шириной и высотой.
 *
 * Выделяет память для хранения пикселей изображения.
 *
 * @param width Ширина изображения в пикселях.
 * @param height Высота изображения в пикселях.
 * @return Структура `image`, содержащая информацию о новом изображении.
 */
struct image create_image(uint64_t width, uint64_t height);

/**
 * @brief Уничтожает изображение и освобождает память.
 *
 * Освобождает выделенную память, используемую для хранения данных изображения.
 *
 * @param img Указатель на структуру `image`, которую необходимо уничтожить.
 */
void destroy_image(struct image *img);

/**
 * @brief Возвращает указатель на пиксель изображения.
 *
 * Предоставляет безопасный доступ к пикселям изображения по заданным координатам.
 * Если координаты выходят за пределы изображения, возвращается `NULL`.
 *
 * @param img Указатель на структуру `image`.
 * @param x Координата X (горизонтальная).
 * @param y Координата Y (вертикальная).
 * @return Указатель на пиксель по указанным координатам или `NULL`, если координаты неверны.
 */
struct pixel *image_pixel(const struct image *img, uint64_t x, uint64_t y);

#endif // IMAGE_H
